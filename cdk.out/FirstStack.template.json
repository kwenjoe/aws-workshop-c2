{
  "Resources": {
    "TaskTaskRoleE98524A1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/Task/TaskRole/Resource"
      }
    },
    "Task79114B6B": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": {
              "Fn::Join": [
                "",
                [
                  "813023055415.dkr.ecr.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/aws-cdk/assets:2c567d2d58117a0120880533e11d67eebf407a1f2d0770b0c887994f8826c893"
                ]
              ]
            },
            "Name": "nginx",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "TaskExecutionRoleEF964934",
            "Arn"
          ]
        },
        "Family": "FirstStackTask6C68150D",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "TaskTaskRoleE98524A1",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/Task/Resource"
      }
    },
    "TaskExecutionRoleEF964934": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/Task/ExecutionRole/Resource"
      }
    },
    "TaskExecutionRoleDefaultPolicy72339918": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ecr:us-east-1:813023055415:repository/aws-cdk/assets"
                  ]
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TaskExecutionRoleDefaultPolicy72339918",
        "Roles": [
          {
            "Ref": "TaskExecutionRoleEF964934"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/Task/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "DemoServiceVpc0A57CD63": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/Resource"
      }
    },
    "DemoServiceVpcPublicSubnet1SubnetFC1A0B8A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet1/Subnet"
      }
    },
    "DemoServiceVpcPublicSubnet1RouteTableA9A1AD07": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet1/RouteTable"
      }
    },
    "DemoServiceVpcPublicSubnet1RouteTableAssociation41D9B555": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoServiceVpcPublicSubnet1RouteTableA9A1AD07"
        },
        "SubnetId": {
          "Ref": "DemoServiceVpcPublicSubnet1SubnetFC1A0B8A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "DemoServiceVpcPublicSubnet1DefaultRoute28B2BA6B": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoServiceVpcPublicSubnet1RouteTableA9A1AD07"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "DemoServiceVpcIGWEB06CDD0"
        }
      },
      "DependsOn": [
        "DemoServiceVpcVPCGW89EE80F1"
      ],
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet1/DefaultRoute"
      }
    },
    "DemoServiceVpcPublicSubnet1EIP1814CF29": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet1/EIP"
      }
    },
    "DemoServiceVpcPublicSubnet1NATGatewayC8FF758D": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "DemoServiceVpcPublicSubnet1SubnetFC1A0B8A"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "DemoServiceVpcPublicSubnet1EIP1814CF29",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet1/NATGateway"
      }
    },
    "DemoServiceVpcPublicSubnet2SubnetE0CC9C31": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet2/Subnet"
      }
    },
    "DemoServiceVpcPublicSubnet2RouteTableA63F5FD6": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet2/RouteTable"
      }
    },
    "DemoServiceVpcPublicSubnet2RouteTableAssociation22E64AB5": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoServiceVpcPublicSubnet2RouteTableA63F5FD6"
        },
        "SubnetId": {
          "Ref": "DemoServiceVpcPublicSubnet2SubnetE0CC9C31"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "DemoServiceVpcPublicSubnet2DefaultRoute3D557560": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoServiceVpcPublicSubnet2RouteTableA63F5FD6"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "DemoServiceVpcIGWEB06CDD0"
        }
      },
      "DependsOn": [
        "DemoServiceVpcVPCGW89EE80F1"
      ],
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet2/DefaultRoute"
      }
    },
    "DemoServiceVpcPublicSubnet3Subnet4B017680": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "AvailabilityZone": "us-east-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet3/Subnet"
      }
    },
    "DemoServiceVpcPublicSubnet3RouteTable50D9BF6A": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet3/RouteTable"
      }
    },
    "DemoServiceVpcPublicSubnet3RouteTableAssociationE4D8A6D6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoServiceVpcPublicSubnet3RouteTable50D9BF6A"
        },
        "SubnetId": {
          "Ref": "DemoServiceVpcPublicSubnet3Subnet4B017680"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet3/RouteTableAssociation"
      }
    },
    "DemoServiceVpcPublicSubnet3DefaultRoute423438D8": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoServiceVpcPublicSubnet3RouteTable50D9BF6A"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "DemoServiceVpcIGWEB06CDD0"
        }
      },
      "DependsOn": [
        "DemoServiceVpcVPCGW89EE80F1"
      ],
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PublicSubnet3/DefaultRoute"
      }
    },
    "DemoServiceVpcPrivateSubnet1SubnetC7090D6C": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PrivateSubnet1/Subnet"
      }
    },
    "DemoServiceVpcPrivateSubnet1RouteTableB7CA94A5": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PrivateSubnet1/RouteTable"
      }
    },
    "DemoServiceVpcPrivateSubnet1RouteTableAssociation2EED8463": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoServiceVpcPrivateSubnet1RouteTableB7CA94A5"
        },
        "SubnetId": {
          "Ref": "DemoServiceVpcPrivateSubnet1SubnetC7090D6C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "DemoServiceVpcPrivateSubnet1DefaultRouteE9E2584D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoServiceVpcPrivateSubnet1RouteTableB7CA94A5"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "DemoServiceVpcPublicSubnet1NATGatewayC8FF758D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "DemoServiceVpcPrivateSubnet2SubnetCA2DCAD6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PrivateSubnet2/Subnet"
      }
    },
    "DemoServiceVpcPrivateSubnet2RouteTable8F999278": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PrivateSubnet2/RouteTable"
      }
    },
    "DemoServiceVpcPrivateSubnet2RouteTableAssociation971B15B9": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoServiceVpcPrivateSubnet2RouteTable8F999278"
        },
        "SubnetId": {
          "Ref": "DemoServiceVpcPrivateSubnet2SubnetCA2DCAD6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "DemoServiceVpcPrivateSubnet2DefaultRoute8A62C107": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoServiceVpcPrivateSubnet2RouteTable8F999278"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "DemoServiceVpcPublicSubnet1NATGatewayC8FF758D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "DemoServiceVpcPrivateSubnet3Subnet6108ADF8": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "AvailabilityZone": "us-east-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PrivateSubnet3/Subnet"
      }
    },
    "DemoServiceVpcPrivateSubnet3RouteTableB31DE1A9": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PrivateSubnet3/RouteTable"
      }
    },
    "DemoServiceVpcPrivateSubnet3RouteTableAssociationDCE0405F": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoServiceVpcPrivateSubnet3RouteTableB31DE1A9"
        },
        "SubnetId": {
          "Ref": "DemoServiceVpcPrivateSubnet3Subnet6108ADF8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PrivateSubnet3/RouteTableAssociation"
      }
    },
    "DemoServiceVpcPrivateSubnet3DefaultRoute522E0BE9": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoServiceVpcPrivateSubnet3RouteTableB31DE1A9"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "DemoServiceVpcPublicSubnet1NATGatewayC8FF758D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/PrivateSubnet3/DefaultRoute"
      }
    },
    "DemoServiceVpcIGWEB06CDD0": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "FirstStack/DemoService/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/IGW"
      }
    },
    "DemoServiceVpcVPCGW89EE80F1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        },
        "InternetGatewayId": {
          "Ref": "DemoServiceVpcIGWEB06CDD0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Vpc/VPCGW"
      }
    },
    "DemoServiceCluster7FE3C98F": {
      "Type": "AWS::ECS::Cluster",
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Cluster/Resource"
      }
    },
    "DemoServiceClusterF6831A4E": {
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
      "Properties": {
        "CapacityProviders": [
          "FARGATE",
          "FARGATE_SPOT"
        ],
        "Cluster": {
          "Ref": "DemoServiceCluster7FE3C98F"
        },
        "DefaultCapacityProviderStrategy": []
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/Cluster/Cluster"
      }
    },
    "DemoServicenginxService89E5D120": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "DemoServiceCluster7FE3C98F"
        },
        "DeploymentConfiguration": {
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": true
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DeploymentController": {
          "Type": "ECS"
        },
        "EnableECSManagedTags": false,
        "EnableExecuteCommand": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "nginx",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "DemoServicenginxExtTG58793A31"
            }
          },
          {
            "ContainerName": "nginx",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "DemoServicenginxIntTG6F8FE9BC"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "DemoServicenginxServiceSecurityGroupFB2CEDF4",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "DemoServiceVpcPrivateSubnet1SubnetC7090D6C"
              },
              {
                "Ref": "DemoServiceVpcPrivateSubnet2SubnetCA2DCAD6"
              },
              {
                "Ref": "DemoServiceVpcPrivateSubnet3Subnet6108ADF8"
              }
            ]
          }
        },
        "TaskDefinition": {
          "Ref": "Task79114B6B"
        }
      },
      "DependsOn": [
        "DemoServiceClusterF6831A4E",
        "DemoServiceCluster7FE3C98F",
        "DemoServiceExtAlbListener4435A41356C",
        "DemoServiceIntAlbListener808AE44CFA"
      ],
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/nginxService/Service"
      }
    },
    "DemoServicenginxServiceSecurityGroupFB2CEDF4": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "FirstStack/DemoService/nginxService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        }
      },
      "DependsOn": [
        "DemoServiceClusterF6831A4E",
        "DemoServiceCluster7FE3C98F"
      ],
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/nginxService/SecurityGroup/Resource"
      }
    },
    "DemoServicenginxServiceSecurityGroupfromFirstStackDemoServiceExternalAlbSecurityGroupFAB4CE5B80B46E6700": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "DemoServicenginxServiceSecurityGroupFB2CEDF4",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "DemoServiceExternalAlbSecurityGroup565E61F9",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "DependsOn": [
        "DemoServiceClusterF6831A4E",
        "DemoServiceCluster7FE3C98F"
      ],
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/nginxService/SecurityGroup/from FirstStackDemoServiceExternalAlbSecurityGroupFAB4CE5B:80"
      }
    },
    "DemoServicenginxServiceSecurityGroupfromFirstStackDemoServiceInternalAlbSecurityGroup0EF87C97809016B1BD": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "DemoServicenginxServiceSecurityGroupFB2CEDF4",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "DemoServiceInternalAlbSecurityGroup78F15D24",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "DependsOn": [
        "DemoServiceClusterF6831A4E",
        "DemoServiceCluster7FE3C98F"
      ],
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/nginxService/SecurityGroup/from FirstStackDemoServiceInternalAlbSecurityGroup0EF87C97:80"
      }
    },
    "DemoServicenginxServiceTaskCountTarget9F80DB8F": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "service/",
              {
                "Ref": "DemoServiceCluster7FE3C98F"
              },
              "/",
              {
                "Fn::GetAtt": [
                  "DemoServicenginxService89E5D120",
                  "Name"
                ]
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iam::813023055415:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
            ]
          ]
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      },
      "DependsOn": [
        "DemoServiceClusterF6831A4E",
        "DemoServiceCluster7FE3C98F"
      ],
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/nginxService/TaskCount/Target/Resource"
      }
    },
    "DemoServicenginxServiceTaskCountTargetCpuScaling44FD0D7F": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "FirstStackDemoServicenginxServiceTaskCountTargetCpuScaling857DF374",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "DemoServicenginxServiceTaskCountTarget9F80DB8F"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
          },
          "TargetValue": 50
        }
      },
      "DependsOn": [
        "DemoServiceClusterF6831A4E",
        "DemoServiceCluster7FE3C98F"
      ],
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/nginxService/TaskCount/Target/CpuScaling/Resource"
      }
    },
    "DemoServicenginxServiceTaskCountTargetRequestScaling8CC227A4": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "FirstStackDemoServicenginxServiceTaskCountTargetRequestScaling8D1D7C9A",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "DemoServicenginxServiceTaskCountTarget9F80DB8F"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ALBRequestCountPerTarget",
            "ResourceLabel": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "DemoServiceExtAlbListener4435A41356C"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "DemoServiceExtAlbListener4435A41356C"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "DemoServiceExtAlbListener4435A41356C"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::GetAtt": [
                      "DemoServicenginxExtTG58793A31",
                      "TargetGroupFullName"
                    ]
                  }
                ]
              ]
            }
          },
          "TargetValue": 1000
        }
      },
      "DependsOn": [
        "DemoServiceClusterF6831A4E",
        "DemoServiceCluster7FE3C98F"
      ],
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/nginxService/TaskCount/Target/RequestScaling/Resource"
      }
    },
    "DemoServicenginxServiceTaskCountTargetRequestScaling2247D77F3": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "FirstStackDemoServicenginxServiceTaskCountTargetRequestScaling2F44704A0",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "DemoServicenginxServiceTaskCountTarget9F80DB8F"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ALBRequestCountPerTarget",
            "ResourceLabel": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "DemoServiceIntAlbListener808AE44CFA"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "DemoServiceIntAlbListener808AE44CFA"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "DemoServiceIntAlbListener808AE44CFA"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::GetAtt": [
                      "DemoServicenginxIntTG6F8FE9BC",
                      "TargetGroupFullName"
                    ]
                  }
                ]
              ]
            }
          },
          "TargetValue": 1000
        }
      },
      "DependsOn": [
        "DemoServiceClusterF6831A4E",
        "DemoServiceCluster7FE3C98F"
      ],
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/nginxService/TaskCount/Target/RequestScaling2/Resource"
      }
    },
    "DemoServiceExternalAlbE1A0DC82": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "DemoServiceExternalAlbSecurityGroup565E61F9",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "DemoServiceVpcPublicSubnet1SubnetFC1A0B8A"
          },
          {
            "Ref": "DemoServiceVpcPublicSubnet2SubnetE0CC9C31"
          },
          {
            "Ref": "DemoServiceVpcPublicSubnet3Subnet4B017680"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "DemoServiceVpcPublicSubnet1DefaultRoute28B2BA6B",
        "DemoServiceVpcPublicSubnet2DefaultRoute3D557560",
        "DemoServiceVpcPublicSubnet3DefaultRoute423438D8"
      ],
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/ExternalAlb/Resource"
      }
    },
    "DemoServiceExternalAlbSecurityGroup565E61F9": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB FirstStackDemoServiceExternalAlb014B64E2",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          }
        ],
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/ExternalAlb/SecurityGroup/Resource"
      }
    },
    "DemoServiceExternalAlbSecurityGrouptoFirstStackDemoServicenginxServiceSecurityGroup2F86795D80F91EEEA4": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "DemoServiceExternalAlbSecurityGroup565E61F9",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "DemoServicenginxServiceSecurityGroupFB2CEDF4",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/ExternalAlb/SecurityGroup/to FirstStackDemoServicenginxServiceSecurityGroup2F86795D:80"
      }
    },
    "DemoServiceInternalAlbFA88761E": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "DemoServiceInternalAlbSecurityGroup78F15D24",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "DemoServiceVpcPrivateSubnet1SubnetC7090D6C"
          },
          {
            "Ref": "DemoServiceVpcPrivateSubnet2SubnetCA2DCAD6"
          },
          {
            "Ref": "DemoServiceVpcPrivateSubnet3Subnet6108ADF8"
          }
        ],
        "Type": "application"
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/InternalAlb/Resource"
      }
    },
    "DemoServiceInternalAlbSecurityGroup78F15D24": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB FirstStackDemoServiceInternalAlbA96DB8ED",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/InternalAlb/SecurityGroup/Resource"
      }
    },
    "DemoServiceInternalAlbSecurityGrouptoFirstStackDemoServicenginxServiceSecurityGroup2F86795D80FE6DBF2D": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "DemoServiceInternalAlbSecurityGroup78F15D24",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "DemoServicenginxServiceSecurityGroupFB2CEDF4",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/InternalAlb/SecurityGroup/to FirstStackDemoServicenginxServiceSecurityGroup2F86795D:80"
      }
    },
    "DemoServicenginxExtTG58793A31": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 443,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/nginxExtTG/Resource"
      }
    },
    "DemoServiceExtAlbListener4435A41356C": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "DemoServicenginxExtTG58793A31"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "DemoServiceExternalAlbE1A0DC82"
        },
        "Certificates": [
          {
            "CertificateArn": "arn:aws:acm:us-east-1:813023055415:certificate/6b186edf-357e-49af-804b-ffc816c5768e"
          }
        ],
        "Port": 443,
        "Protocol": "HTTPS"
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/ExtAlbListener443/Resource"
      }
    },
    "DemoServicenginxIntTG6F8FE9BC": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "DemoServiceVpc0A57CD63"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/nginxIntTG/Resource"
      }
    },
    "DemoServiceIntAlbListener808AE44CFA": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "DemoServicenginxIntTG6F8FE9BC"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "DemoServiceInternalAlbFA88761E"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/IntAlbListener80/Resource"
      }
    },
    "DemoServiceHostedZone20E729E6": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "Name": "svc.local.",
        "VPCs": [
          {
            "VPCId": {
              "Ref": "DemoServiceVpc0A57CD63"
            },
            "VPCRegion": "us-east-1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/HostedZone/Resource"
      }
    },
    "DemoServiceInternalAlbAlias71FE717E": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "internal.svc.local.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "DemoServiceInternalAlbFA88761E",
                    "DNSName"
                  ]
                }
              ]
            ]
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "DemoServiceInternalAlbFA88761E",
              "CanonicalHostedZoneID"
            ]
          }
        },
        "HostedZoneId": {
          "Ref": "DemoServiceHostedZone20E729E6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/InternalAlbAlias/Resource"
      }
    },
    "DemoServiceExternalAlbAlias439CCD53": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "external.svc.local.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "DemoServiceExternalAlbE1A0DC82",
                    "DNSName"
                  ]
                }
              ]
            ]
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "DemoServiceExternalAlbE1A0DC82",
              "CanonicalHostedZoneID"
            ]
          }
        },
        "HostedZoneId": {
          "Ref": "DemoServiceHostedZone20E729E6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/DemoService/ExternalAlbAlias/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAACn1TTW/bMAz9Lb0r6rJ123Wp23UBhs2wix56o2XWU+NIBiW5CAz/91GWkzgrsJPIx+9Hai3X6y/yw9U3eHMrVe+uB2UJ5VB6UDtRoLOBFIqNc+gZa7RpRPZifgffBS8ya5ynoHzEjs6jiLkGVE4O34Ea8PgIbneHL9por62Jzv8i1njQBmmJtcF5pOj9XsygA6X9ISfb6xqJG7RKQwx0Yq5aIvWam+eoo1gqaKFqp4YyG4wfhYa9HArbTn7Tm9tWq0NUkzQKVLSCSIGTd1btkLZ7aHAiJdpkgZ112ls63IJDhj7K4alTMcVTnok8VJynDJXBiamzVNgQ2alS9YSfscVQJ+co3G/z+PwC/8BjvsFB5KT7OPEp8dYwSSwfHVIns7bxvN0/ezRelKgCMY8PZEOXmPofsDUNoXPv8PsJ5s13HU86dQzBW8d088XwOZ14p2bm4BJJzyPx1XFAmeLOi7gAeB8tOK9Va6GuOI1RbOuZ8825/E+23U62dDcX+sIvFT5Nu1SX2TQfnZkzzfIoKC7k8yc5zPT/sGypn62ZtrTQNgXyt6rTL4lSiX4cR2FsjfLVXffrG7n+Km+uXp3WK+K71HuURXr/AtxrLF+jAwAA"
      },
      "Metadata": {
        "aws:cdk:path": "FirstStack/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "DemoServiceExternalEndpointC0E627A8": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "DemoServiceExternalAlbE1A0DC82",
                "DNSName"
              ]
            }
          ]
        ]
      }
    },
    "DemoServiceExternalEndpointPrivateC477E264": {
      "Value": "http://external.svc.local"
    },
    "DemoServiceInternalEndpointD604BC10": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "DemoServiceInternalAlbFA88761E",
                "DNSName"
              ]
            }
          ]
        ]
      }
    },
    "DemoServiceInternalEndpointPrivate8173D809": {
      "Value": "http://internal.svc.local"
    }
  }
}